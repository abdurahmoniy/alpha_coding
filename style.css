* {
  box-sizing: border-box;
}

body {
  margin: 0px;
  font-family: "segoe ui";
}

.nav {
  height: 50px;
  width: 100%;
  background-color: #4d4d4d;
  position: relative;
}

.nav > .nav-header {
  display: inline;
}

.nav > .nav-header > .nav-title {
  display: inline-block;
  font-size: 22px;
  color: #fff;
}
.nav > .nav-header > .nav-title > img {
  width: 50px;
}

.nav > .nav-btn {
  display: none;
}

.nav > .nav-links {
  display: inline;
  float: right;
  font-size: 18px;
}

.nav > .nav-links > a {
  display: inline-block;
  padding: 13px 10px 13px 10px;
  text-decoration: none;
  color: #efefef;
}

.nav > .nav-links > a:hover {
  background-color: rgba(0, 0, 0, 0.3);
}

.nav > #nav-check {
  display: none;
}

@media (max-width: 600px) {
  .nav > .nav-btn {
    display: inline-block;
    position: absolute;
    right: 0px;
    top: 0px;
  }
  .nav > .nav-btn > label {
    display: inline-block;
    width: 50px;
    height: 50px;
    padding: 13px;
  }
  .nav > .nav-btn > label:hover,
  .nav #nav-check:checked ~ .nav-btn > label {
    background-color: rgba(0, 0, 0, 0.3);
  }
  .nav > .nav-btn > label > span {
    display: block;
    width: 25px;
    height: 10px;
    border-top: 2px solid #eee;
  }
  .nav > .nav-links {
    position: absolute;
    display: block;
    width: 100%;
    background-color: #333;
    height: 0px;
    transition: all 0.3s ease-in;
    overflow-y: hidden;
    top: 50px;
    left: 0px;
  }
  .nav > .nav-links > a {
    display: block;
    width: 100%;
  }
  .nav > #nav-check:not(:checked) ~ .nav-links {
    height: 0px;
  }
  .nav > #nav-check:checked ~ .nav-links {
    height: calc(100vh - 50px);
    overflow-y: auto;
  }
}

/* carousel */
.box-area {
  width: 100%;
  padding: 50px 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.box {
  width: 100px;
  height: 400px;
  margin-right: 20px;
  overflow: hidden;
  border-radius: 20px;
  position: relative;
  transition: all linear 0.6s;
}

.box:last-child {
  margin-right: 0;
}

.box::before {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.3);
}

.box img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.box i {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  text-align: center;
  line-height: 40px;
  background: #fff;
  position: absolute;
  bottom: 20px;
  left: 30px;
  font-size: 20px;
}

.box:nth-child(1) i {
  color: #ff5200;
}
.box:nth-child(2) i {
  color: #ca470a;
}
.box:nth-child(3) i {
  color: #00d9ff;
}
.box:nth-child(4) i {
  color: #0077ff;
}

.box h2 {
  position: absolute;
  bottom: 20px;
  left: 80px;
  font-family: "Poppins", sans-serif;
  font-size: 25px;
  color: #f6f6f6;
  font-weight: 600;
  opacity: 0;
  transition: all linear 0.3s;
}

.box p {
  position: absolute;
  bottom: 0;
  left: 80px;
  font-family: "Poppins", sans-serif;
  font-size: 18px;
  font-weight: 400;
  color: #f6f6f6;
  opacity: 0;
  transition: all linear 0.3s;
}

.box.active h2 {
  opacity: 1;
}

.box.active p {
  opacity: 1;
}

.active {
  width: 700px;
  transition: all linear 0.6s;
}

 /*  card*/
 :root {
  --cover-timing: 0.5s;
  --cover-ease: cubic-bezier(0.66, 0.08, 0.19, 0.97);
  --cover-stagger: 0.15s;
  --text-timing: .75s;
  --text-stagger: 0.015s;
  --text-ease: cubic-bezier(0.38, 0.26, 0.05, 1.07);
  --title-stagger: 0.05s;
  --highlight: white;
}

.card {
  position: relative;
  overflow: hidden;
  aspect-ratio: 9/12;
  display: flex;
  flex-direction: column;
  border-radius: 7px;
  box-shadow: rgba(255, 255, 255, 0.3) 0 5vw 6vw -8vw, rgba(255, 255, 255, 0) 0 4.5vw 5vw -6vw, rgba(50, 50, 80, 0.5) 0px 4vw 8vw -2vw, rgba(0, 0, 0, 0.8) 0px 4vw 5vw -3vw;
  transition: box-shadow 1s var(--cover-ease);
}
.card > * {
  z-index: 2;
}
.card > img {
  z-index: 0;
  transition: all 0.8s cubic-bezier(0.66, 0.08, 0.19, 0.97);
}
.card::before, .card::after {
  content: "";
  width: 100%;
  height: 50%;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  transform-origin: left;
  transform: scaleX(0);
  transition: all var(--cover-timing) var(--cover-ease);
  z-index: 1;
}
.card::after {
  transition-delay: var(--cover-stagger);
  top: 50%;
}
.card:hover, .card:focus {
  box-shadow: white 0 5vw 6vw -9vw, var(--highlight) 0 5.5vw 5vw -7.5vw, rgba(50, 50, 80, 0.5) 0px 4vw 8vw -2vw, rgba(0, 0, 0, 0.8) 0px 4vw 5vw -3vw;
}
.card:hover::before, .card:hover::after, .card:focus::before, .card:focus::after {
  transform: scaleX(1);
}
.card:hover h2 .char, .card:hover p .word, .card:focus h2 .char, .card:focus p .word {
  opacity: 1;
  transform: translateY(0);
  color: inherit;
}
.card:hover h2 .char, .card:focus h2 .char {
  transition-delay: calc(0.1s + var(--char-index) * var(--title-stagger));
}
.card:hover p .word, .card:focus p .word {
  transition-delay: calc(0.1s + var(--word-index) * var(--text-stagger));
}
.card:hover img, .card:focus img {
  transform: scale(1.1);
}
.card:nth-of-type(1) {
  --highlight: coral;
}
.card:nth-of-type(2) {
  --highlight: #56ffe5;
}

.text {
  position: absolute;
  inset: 20px;
  top: auto;
}

h2 {
  font-size: 30px;
  font-size: clamp(20px, 4vw, 40px);
  font-weight: 800;
  margin-bottom: 0.2em;
}

p {
  font-size: 12px;
  font-size: clamp(10px, 1.25vw, 14px);
  line-height: 1.4;
  text-align: justify;
  margin-top: 0.2em;
  margin-bottom: 0;
}

h2 .char,
p .word {
  color: var(--highlight);
  display: inline-block;
  opacity: 0;
  position: relative;
  transform: translateY(20px);
  transition-property: transform, opacity, color;
  transition-timing-function: var(--text-ease);
  transition-duration: var(--text-timing), var(--text-timing), calc(var(--text-timing)*2);
}

img {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  border-radius: 7px;
}

main {
  grid-template-columns: 1fr;
  grid-template-rows: 60px;
  grid-gap: 2em;
}
@media screen and (min-width: 600px) {
  main {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: -webkit-min-content 1fr;
    grid-template-rows: min-content 1fr;
  }
}

.card {
  width: 90vw;
  max-width: 300px;
}
@media screen and (min-width: 600px) {
  .card {
    width: 40vw;
  }
}

h1 {
  color: #5b6377;
  font-weight: 100;
}
@media screen and (min-width: 600px) {
  h1 {
    grid-column: 1/3;
  }
}

body, main {
  display: grid;
  place-items: center;
}

body, html {
  color: white;
  background: #060112;
  padding: 0;
  margin: 0;
  min-height: 100vh;
  font-family: "Open Sans", sans-serif;
}

body {
  /* padding: 1em 0 3em; */
  min-height: calc(100vh - 4em);
}
/* footer */

.app {
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: column;
  border: 1px solid #000;
}

.tag-list {
  display: flex;
  width: 100%;
  display: flex;
  flex-shrink: 0;
  /* flex-direction: column; */
  gap: 1rem 0;
  position: relative;
  padding: 1.5rem 0;
  overflow: hidden;
}

.tag-list {
  animation: loop 10s infinite linear;
  /* display: flex;
  width: fit-content;
  animation-name: loop;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: var(--direction);
  animation-duration: var(--duration); */
}
.tag-list.reverse {
  animation: loop 10s infinite reverse linear;
  /* display: flex;
  width: fit-content;
  animation-name: loop;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: var(--direction);
  animation-duration: var(--duration); */
}

.tag {
  display: flex;
  align-items: center;
  gap: 0 0.2rem;
  color: #e2e8f0;
  font-size: 0.9rem;
  background-color: #334155;
  border-radius: 0.4rem;
  padding: 0.7rem 1rem;
  margin-right: 1rem;
  box-shadow: 0 0.1rem 0.2rem rgba(0, 0, 0, 0.2),
    0 0.1rem 0.5rem rgba(0, 0, 0, 0.3), 0 0.2rem 1.5rem rgba(0, 0, 0, 0.4);
}
.tag span {
  font-size: 1.2rem;
  color: #64748b;
}

.fade {
  pointer-events: none;
  background: linear-gradient(
    90deg,
    #1e293b,
    transparent 30%,
    transparent 70%,
    #1e293b
  );
  position: absolute;
  inset: 0;
}

@keyframes loop {
  0% {
    transform: translateX(-50%);
  }
  100% {
    transform: translateX(110%);
  }
}
